*svss.txt*  SVSS's vim style sheet


==============================================================================
CONTENTS                                                       *svss-contents*

  1. Intro ....................... |svss-intro|
  2. Quickstart .................. |svss-quickstart|
  3. Syntax ...................... |svss-syntax|
  4. Functions ................... |svss-functions|
  5. Commands .................... |svss-commands|
  6. Options ..................... |svss-options|
  7. About ....................... |svss-about|


==============================================================================
1. Intro                                                          *svss-intro*

Are you a good friends with CSS or SCSS?
*SVSS* is a style sheet for Vim. You can easily create your own color scheme
with SCSS-like syntax. For example:
>
    $base-hue: 240;
    Normal {
        guibg: hsl($base-hue, 0, 0);
        guifg: hsl($base-hue, 100%, 50%);
    }
<
It will be compiled as the following command:
>
    hi! Normal guibg=#00000 guifg=#0000ff
<

==============================================================================
2. Quickstart                                                *svss-quickstart*

TODO


==============================================================================
3. Syntax                                                        *svss-syntax*

TODO


==============================================================================
4. Functions                                                  *svss-functions*

adjust-color({color}[,                            *svss-function-adjust-color*
    {red}, {green}, {blue},
    {hue}, {saturation}, {lightness}])
                        Adjust some components of the specified color. Use
                        named parameter to specify each optional arguments.
>
                            String {
                                guifg: adjust-color(
                                    #007f00,
                                    $saturation: +10%,
                                    $lightness: +10%);
                            }
<
darken({color}, {amount})                               *svss-function-darken*
                        Make the specified color darken.
>
                            String {
                                guifg: darken(#007f00, 10%);
                            }
<
hsl({hue}, {saturation}, {lightness})                      *svss-function-hsl*
                        Create a color from HSL components.
>
                            String {
                                guifg: hsl(120, 50%, 50%);
                            }
<
lighten({color}, {amount})                             *svss-function-lighten*
                        Make the specified color lighten.
>
                            String {
                                guifg: lighten(#007f00, 10%);
                            }
<
mix({color1}, {color2}[, {weight})                         *svss-function-mix*
                        Mix two colors. If {weight} is not specified, 50%
                        will be used.
>
                            String {
                                guibg: mix(#ff0000, #0000ff, 20%);
                            }
<

rgb({red}, {green}, {blue})                                *svss-function-rgb*
                        Create a color from RGB components.
>
                            String {
                                guifg: rgb(0, 127, 0);
                            }
<

==============================================================================
5. Commands                                                    *svss-commands*

:SvssScan                                                          *:SvssScan*
                        Scan highlighting of the current buffer and convert
                        it into SVSS.

:SvssCompileBuffer [file]                                 *:SvssCompileBuffer*
                        Compile the current buffer, and show compilation
                        result if succeed. If [file] is not specified,
                        compilation result will be output as a new buffer.

:SvssSource                                                      *:SvssSource*
                        Source the current buffer.


==============================================================================
6. Options                                                      *svss-options*

g:svss_auto_source                                        *g:svss_auto_source*
                        If enabled, source SVSS file automatically when
                        saving it.

g:svss_template                                              *g:svss_template*
                        TODO


==============================================================================
7. About                                                          *svss-about*

|svss.vim| is developed by cocopon and licensed under the MIT License.
Visit the project page for the latest version:

    https://github.com/cocopon/svss.vim


==============================================================================
vim:ft=help:norl:ts=8:tw=78:
